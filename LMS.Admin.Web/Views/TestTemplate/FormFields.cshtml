@using LMS.Dto;
@model TestTemplateDTO
@{
    var types = ((IEnumerable<SelectListItem>) ViewData["AvailableTypes"]);
    var categories = ((IEnumerable<SelectListItem>) ViewData["AvailableCategories"]);
}

<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<input asp-for="Id" type="hidden"/>
<div class="row">
    <div class="form-group col-12 col-md-6">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" type="text"/>
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group col-12 col-md-6">
        <label asp-for="Duration" class="control-label"></label>
        <input asp-for="Duration" class="form-control" type="time"/>
        <span asp-validation-for="Duration" class="text-danger"></span>
    </div>
</div>
<div class="form-group">
    <label asp-for="Description" class="control-label"></label>
    <textarea asp-for="Description" class="form-control"></textarea>
    <span asp-validation-for="Description" class="text-danger"></span>
</div>
<br/>
<div id="levels">
    <h4>
        Levels
        <input type="button" class="btn pull-right" value="+" height="36"></input>
    </h4>
    <hr/>
    @for (var index = 0; index < Model.Levels.Count; index++)
    {
        <div class="level" data-index="@index">
            <input asp-for="Levels[index].Id" type="hidden"/>
            <div class="row">
                <div class="form-group col-12 col-md-6">
                    <label asp-for="Levels[index].MaxScore" class="control-label"></label>
                    <br/>
                    <input style="width: 100%" asp-for="Levels[index].MaxScore" class="form-control form-control-range" type="text" data-provide="slider" data-slider-min="0" data-slider-max="@TestTemplateDTO.MaxScore"/>
                </div>
                <div class="form-group col-12 col-md-6">
                    <label asp-for="Levels[index].Count" class="control-label"></label>
                    <br/>
                    <input style="width: 100%" asp-for="Levels[index].Count" class="form-control form-control-range" type="text" data-provide="slider" data-slider-min="0" data-slider-max="@TestTemplateDTO.MaxTaskPerLevelCount"/>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Levels[index].Filter.ComplexityRange" class="control-label"></label>
                <br/>
                <input style="width: 100%" asp-for="Levels[index].Filter.ComplexityRange" class="form-control" type="text" data-provide="slider" data-slider-value="[@Model.Levels[index].Filter.ComplexityRange]" data-slider-min="@TaskDTO.MinComplexity" data-slider-max="@TaskDTO.MaxComplexity" data-slider-step="1"/>
            </div>
            <div class="row">
                <div class="form-group col-12 col-md-6">
                    <label asp-for="Levels[index].Filter.CategoryIds" class="control-label"></label>
                    <select multiple asp-for="Levels[index].Filter.CategoryIds" asp-items="@categories" data-live-search="true" class="form-control selectpicker"></select>
                </div>
                <div class="form-group col-12 col-md-6">
                    <label asp-for="Levels[index].Filter.TaskTypeIds" class="control-label"></label>
                    <select multiple asp-for="Levels[index].Filter.TaskTypeIds" asp-items="@types" data-live-search="true" class="form-control selectpicker"></select>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Levels[index].Description" class="control-label"></label>
                <textarea asp-for="Levels[index].Description" class="form-control"></textarea>
                <span asp-validation-for="Levels[index].Description" class="text-danger"></span>
            </div>
        </div>
    }
</div>

<div class="form-group">
    <input type="submit" value="Save" class="btn btn-default"/>
</div>