@using LMS.Dto
@model IEnumerable<TestTemplateListItemDTO>

@{
    ViewData["Title"] = "List";
}

<p>
    <a asp-action="Create">Create New</a>
</p>
@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Categories)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AvgComplexity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Tasks)
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <label>@item.Title</label>
                        </td>
                        <td>
                            <label>@string.Join(",", item.Categories.Select(c => c.Title))</label>
                        </td>
                        <td>
                            <label>@($"{item.AvgComplexity:#.##}/{@TaskDTO.MaxComplexity}")</label>
                        </td>
                        <td>
                            <ol>
                                @foreach (var taskTemplate in item.Tasks)
                                {
                                    <li>
                                        @string.Join(",", taskTemplate.Types.Select(c => c.Title))
                                        -
                                        @taskTemplate.ValidTaskCount
                                        valid tasks
                                    </li>
                                }
                            </ol>
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a href="#" data-toggle="modal" data-target="#deleteModal" data-item-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <center>No items found</center>
}
<div id="deleteModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure that you want to delete this template.</p>
            </div>
            <div class="modal-footer">
                <form asp-action="Delete" method="post">
                    <input name="id" type="hidden" id="confirmItemId" />
                    <button type="submit" class="btn btn-primary">Delete</button>
                </form>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $('#deleteModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var itemId = button.data('item-id');

            var input = $(this).find('#confirmItemId');
            input.attr("value", itemId);
        })
    </script>
}
