# ASP.NET Core EditorConfig file

# NOTE: This file focuses on settings Visual Studio 2017 supports natively. For example, VS does not support insert_final_newline.
# We do use it, but it's harder to enforce without a separate VS extension or an editor that supports it.
# See https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options for more

# Mark this file as the "root" for everything below this point. This means that editor config files above
# this file will be ignored
root = true

# Default settings
[*.{cs,csx,vb,vbx}]
indent_style = space
indent_size = 4
charset = utf-8-bom
insert_final_newline = true

# Unix-only files
[*.sh]
end_of_line = lf

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# 2-space files
[{*.json,*.yml,*.xaml}]
indent_size = 2

# .NET Code Style Settings
# See https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[{*.cs,*.vb}]
dotnet_sort_system_directives_first = true:suggestions

# Don't use 'this.'/'Me.' prefix for anything
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Modifiers
dotnet_style_require_accessibility_modifiers = always:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Use language keywords over framework type names for type references
# i.e. prefer 'string' over 'String'
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Prefer object/collection initializers
# dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion

# C# 7: Prefer using named tuple names over '.Item1', '.Item2', etc.
dotnet_style_explicit_tuple_names = true:warning

# Prefer using 'foo ?? bar' over 'foo != null ? foo : bar'
dotnet_style_coalesce_expression = true:warning

# Prefer using '?.' over ternary null checking where possible
dotnet_style_null_propagation = true:warning

[*.cs]
# Use 'var' in all cases where it can be used
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:suggestion

# C# 7: Prefer using pattern matching over "if(x is T) { var t = (T)x; }" and "var t = x as T; if(t != null) { ... }"
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning

# C# 7: Prefer using 'out var' where possible
csharp_style_inlined_variable_declaration = true:warning

# C# 7: Use throw expressions when null-checking
csharp_style_throw_expression = true:warning

# Prefer using "func?.Invoke(args)" over "if(func != null) { func(args); }"
csharp_style_conditional_delegate_call = true:warning

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true

# Prefer expression-bodied methods, constructors, operators, etc.
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion
